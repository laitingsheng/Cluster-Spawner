stages:
  - launch
  - init
  - prepare
  - deploy

image: registry.gitlab.com/laitingsheng/docker-ubuntu:k8s

.ansible:
  variables:
    ANSIBLE_LOAD_CALLBACK_PLUGINS: 1
    ANSIBLE_STDOUT_CALLBACK: debug
    ANSIBLE_HOST_KEY_CHECKING: 0
  before_script:
    - source project.sh
    - source $OS_IDENTITY_FILE
    - chmod 755 openstack_inventory.py
    - chmod 600 $K8S_MASTER_PRIVATE_KEY
  only:
    refs:
      - master
    changes:
      - launch.yml
      - init.yml
      - project.sh
  except:
    - schedules

launch:
  stage: launch
  extends:
    - .ansible
  script:
    - ansible-playbook -i openstack_inventory.py -e public_key_path=$K8S_MASTER_PUBLIC_KEY launch.yml

init:
  stage: init
  extends:
    - .ansible
  script:
    - ansible-playbook -i openstack_inventory.py --private-key $K8S_MASTER_PRIVATE_KEY init.yml
  when: delayed
  start_in: 2 minutes

.k8s:
  before_script:
    - source project.sh
    - source $OS_IDENTITY_FILE
    - chmod 755 openstack_inventory.py
    - chmod 600 $K8S_MASTER_PRIVATE_KEY
    - mkdir -p ~/.kube
    - python openstack_inventory.py --host T_R-k8s-master | grep accessIPv4 | awk -F' ' '{print $2}' | awk '{gsub(/[",]/, "")} 1' | xargs -i bash -c "scp -BCpqi $K8S_MASTER_PRIVATE_KEY -o 'StrictHostKeyChecking=no' -o 'UserKnownHostsFile=/dev/null' ubuntu@{}:.kube/config ~/.kube/config"

prepare:
  stage: prepare
  extends:
    - .ansible
    - .k8s
  script:
    - kubectl label node --overwrite t-r-k8s-master node-role.kubernetes.io/master=master
    - printf "%s\n" {1..3}" "{1..4} | awk -F' ' 'BEGIN{TYPES[1]="small";TYPES[2]="medium";TYPES[3]="large";}{print "t-r-k8s-minion-"TYPES[$1]"-"$2}' | xargs -i -L bash -c "kubectl label node --overwrite {} node-role.kubernetes.io/worker=worker"
    - kubectl -n kube-system create secret docker-registry custom-scheduler-registry-secret --docker-server=$K8S_SCHEDULER_REGISTRY --docker-username=$K8S_SCHEDULER_REGISTRY_USERNAME --docker-password=$K8S_SCHEDULER_REGISTRY_PASSWORD
  only:
    changes:
      - .gitlab-ci.yml

.deploy:
  stage: deploy
  extends:
    - .k8s

monitoring:
  extends:
    - .deploy
  script:
    - kubectl apply -f monitoring/ || true
    - until kubectl get customresourcedefinitions servicemonitors.monitoring.coreos.com ; do date; sleep 1; echo ""; done
    - until kubectl get servicemonitors --all-namespaces ; do date; sleep 1; echo ""; done
    - kubectl apply -f monitoring/
  only:
    refs:
      - master
    changes:
      - launch.yml
      - init.yml
      - project.sh
      - monitoring/*
      - .gitlab-ci.yml
  except:
    - schedules

scheduler:
  extends:
    - .deploy
  script:
    - kubectl apply -f scheduler/
  only:
    refs:
      - master
    changes:
      - launch.yml
      - init.yml
      - project.sh
      - scheduler/*
      - .gitlab-ci.yml
  except:
    - schedules
